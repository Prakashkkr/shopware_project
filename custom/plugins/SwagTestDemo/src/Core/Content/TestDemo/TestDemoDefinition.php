<?php declare(strict_types=1);

namespace SwagTestDemo\Core\Content\TestDemo;

use Shopware\Core\Content\Media\MediaDefinition;
use Shopware\Core\Content\Product\ProductDefinition;
use Shopware\Core\Framework\DataAbstractionLayer\EntityDefinition;
use Shopware\Core\Framework\DataAbstractionLayer\Field\BoolField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\FkField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\ApiAware;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\Inherited;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\PrimaryKey;
use Shopware\Core\Framework\DataAbstractionLayer\Field\IdField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\ManyToOneAssociationField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\OneToOneAssociationField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\ReferenceVersionField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\TranslatedField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\TranslationsAssociationField;
use Shopware\Core\Framework\DataAbstractionLayer\FieldCollection;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\Required;
use Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition;
use Shopware\Core\System\Country\CountryDefinition;
use SwagTestDemo\Core\Content\TestDemo\Aggregate\TestDemoTranslation\TestDemoTranslationDefinition;

class TestDemoDefinition extends EntityDefinition
{
    public const ENTITY_NAME = 'test_demo';

    public function getEntityName(): string
    {
        return self::ENTITY_NAME;
    }
    public function getEntityClass(): string
    {
        return TestDemoEntity::class; // TODO: Change the autogenerated stub
    }
    public function getCollectionClass(): string
    {
        return TestDemoCollection::class; // TODO: Change the autogenerated stub
    }
    protected function defineFields(): FieldCollection
    {
        return new FieldCollection([
                (new IdField('id', 'id'))->addFlags(new PrimaryKey(), new ApiAware(), new Required()),
                (new BoolField('active','active')),
                (new TranslatedField('name')),
                (new TranslatedField('city')),
                new FkField('country_id','countryId',CountryDefinition::class),
                new FkField('country_state_id','countryStateId',CountryStateDefinition::class),
                new FkField('media_id','mediaId',MediaDefinition::class),
                new FkField('product_id','productId',ProductDefinition::class),
                (new ReferenceVersionField(ProductDefinition::class))->addFlags(new ApiAware(), new Inherited()),

                //country
                new ManyToOneAssociationField(
                    'country',
                    'country_id',
                    CountryDefinition::class,
                    'id',
                    false
                ),
                // state
                new ManyToOneAssociationField(
                    'countryState',
                    'country_state_id',
                    CountryStateDefinition::class,
                    'id',
                    false
                ),
                //  Media
                new OneToOneAssociationField(
                    'swagMedia',
                    'media_id',
                    'id',
                    MediaDefinition::class,
                    false
                ),

                // product
                new ManyToOneAssociationField(
                    'productIds',
                    'product_id',
                    ProductDefinition::class,
                    'id',
                    false
                ),

                //Translation
                new TranslationsAssociationField(
                    TestDemoTranslationDefinition::class,
                    'test_demo_id'
                )
            ]
        );
    }
}
